<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:view="clr-namespace:KokoroIO.XamarinForms.Views"
    xmlns:xlabs="clr-namespace:XLabs.Forms.Controls;assembly=XLabs.Forms"
    x:Class="KokoroIO.XamarinForms.Views.MessagesPage"
    Title="{Binding Title}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <Style
                x:Key="bannerButtonStyle"
                TargetType="Button">
                <Setter
                    Property="Margin"
                    Value="8,4" />
                <Setter
                    Property="VerticalOptions"
                    Value="Start" />
                <Setter
                    Property="HorizontalOptions"
                    Value="FillAndExpand" />
                <Setter
                    Property="FontSize"
                    Value="Small" />
                <Setter
                    Property="BorderWidth"
                    Value="0" />
                <Setter
                    Property="BorderRadius"
                    Value="5" />
                <Setter
                    Property="TextColor"
                    Value="#fff" />
            </Style>
            <Style
                x:Key="footerButtonStyle"
                TargetType="xlabs:ImageButton">
                <Setter
                    Property="BackgroundColor"
                    Value="Transparent" />
                <Setter
                    Property="Margin"
                    Value="0" />
                <Setter
                    Property="ImageWidthRequest"
                    Value="24" />
                <Setter
                    Property="ImageHeightRequest"
                    Value="24" />
                <Setter
                    Property="WidthRequest"
                    Value="48" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem
            Order="Secondary"
            Text="Members"
            Command="{Binding Channel.ShowDetailCommand}" />
        <ToolbarItem
            Order="Secondary"
            Text="Invite member [WIP]" />
        <ToolbarItem
            Order="Secondary"
            Text="Search message [WIP]" />
        <ToolbarItem
            Order="Secondary"
            Text="Leave channel [WIP]" />
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <view:MessageWebView
                LoadOlderCommand="{Binding PrependCommand}"
                RefreshCommand="{Binding RefreshCommand}"
                NavigatingCommand="{Binding OpenUrlCommand}"
                Messages="{Binding Messages}"
                SelectedMessage="{Binding SelectedMessage}" />
            <StackLayout
                HorizontalOptions="FillAndExpand"
                VerticalOptions="Start">
                <Button
                    Style="{StaticResource bannerButtonStyle}"
                    BackgroundColor="#4169E1"
                    Text="{Binding Channel.UnreadCount,StringFormat='{}{0} new messages'}"
                    Command="{Binding ShowUnreadCommand}">
                    <Button.Triggers>
                        <DataTrigger
                            TargetType="Button"
                            Binding="{Binding Channel.UnreadCount}"
                            Value="0">
                            <Setter
                                Property="IsVisible"
                                Value="False" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button
                    Style="{StaticResource bannerButtonStyle}"
                    Text="Archived channel"
                    BackgroundColor="DarkOrange"
                    IsVisible="{Binding IsArchiveBannerShown}"
                    Command="{Binding ClearArchiveBannerCommand}" />
                <Button
                    Style="{StaticResource bannerButtonStyle}"
                    Text="Disconnected from server"
                    BackgroundColor="Khaki"
                    IsVisible="{Binding Application.IsDisconnected}"
                    Command="{Binding Application.ConnectCommand}" />
                <ListView
                    VerticalOptions="Start"
                    HorizontalOptions="End"
                    SeparatorVisibility="None"
                    InputTransparent="True"
                    ItemsSource="{Binding Notifications}">
                    <ListView.Style>
                        <Style
                            TargetType="ListView">
                            <Style.Triggers>
                                <DataTrigger
                                    TargetType="ListView"
                                    Binding="{Binding Notifications.Count}"
                                    Value="0">
                                    <Setter
                                        Property="IsVisible"
                                        Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Style>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <Grid
                                    HorizontalOptions="End">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="Auto" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Image
                                        VerticalOptions="Center"
                                        WidthRequest="16"
                                        HeightRequest="16"
                                        Source="{Binding Profile.Avatar}" />
                                    <Label
                                        Grid.Column="1"
                                        FontSize="Micro"
                                        TextColor="Red"
                                        VerticalOptions="Center"
                                        VerticalTextAlignment="Center"
                                        Text="{Binding Channel.DisplayName, StringFormat='posted to {0}'}" />
                                </Grid>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackLayout>
            <ActivityIndicator
                VerticalOptions="Center"
                HorizontalOptions="Center"
                IsRunning="True"
                IsVisible="{Binding IsBusy}" />

            <Grid
                Grid.Row="1"
                HeightRequest="32"
                IsVisible="{Binding CanPost}">

                <StackLayout
                    Orientation="Horizontal">

                    <StackLayout.Triggers>
                        <DataTrigger
                            TargetType="StackLayout"
                            Binding="{Binding ProfileCandicates.HasResult}"
                            Value="True">
                            <Setter
                                Property="IsVisible"
                                Value="False" />
                        </DataTrigger>
                        <DataTrigger
                            TargetType="StackLayout"
                            Binding="{Binding ChannelCandicates.HasResult}"
                            Value="True">
                            <Setter
                                Property="IsVisible"
                                Value="False" />
                        </DataTrigger>
                    </StackLayout.Triggers>

                    <xlabs:ImageButton
                        Style="{StaticResource footerButtonStyle}"
                        Image="image.png"
                        Command="{Binding UploadImageCommand}"
                        IsVisible="{Binding SupportsImageUpload}" />

                    <xlabs:ImageButton
                        Style="{StaticResource footerButtonStyle}"
                        Image="camera.png"
                        Command="{Binding TakePhotoCommand}"
                        IsVisible="{Binding SupportsTakePhoto}" />

                    <xlabs:ImageButton
                        Style="{StaticResource footerButtonStyle}"
                        Image="visibility.png"
                        Command="{Binding ToggleNsfwCommand}">
                        <xlabs:ImageButton.Triggers>
                            <DataTrigger
                                TargetType="xlabs:ImageButton"
                                Binding="{Binding IsNsfw}"
                                Value="True">
                                <Setter
                                    Property="Image"
                                    Value="visibility_off.png" />
                            </DataTrigger>
                        </xlabs:ImageButton.Triggers>
                    </xlabs:ImageButton>
                </StackLayout>

                <view:MembersLabel
                    LineBreakMode="NoWrap"
                    VerticalTextAlignment="Center"
                    IsVisible="{Binding ProfileCandicates.HasResult}"
                    Entities="{Binding ProfileCandicates.Result}"
                    SelectCommand="{Binding  ProfileCandicates.SelectCommand}" />

                <view:ChannelsLabel
                    LineBreakMode="NoWrap"
                    VerticalTextAlignment="Center"
                    IsVisible="{Binding ChannelCandicates.HasResult}"
                    Entities="{Binding ChannelCandicates.Result}"
                    SelectCommand="{Binding  ChannelCandicates.SelectCommand}" />
            </Grid>

            <Grid
                Grid.Row="2"
                Margin="4"
                IsVisible="{Binding CanPost}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition
                        Width="Auto" />
                </Grid.ColumnDefinitions>
                <view:ExpandableEditor
                    x:Name="editor"
                    FontSize="Small"
                    HorizontalOptions="FillAndExpand"
                    Text="{Binding NewMessage}"
                    Placeholder="{Binding Channel.Placeholder}"
                    SelectionStart="{Binding SelectionStart}"
                    SelectionLength="{Binding SelectionLength}"
                    HasFocus="{Binding NewMessageFocused, Mode=TwoWay}"
                    PostCommand="{Binding PostCommand}"
                    FilePasted="ExpandableEditor_FilePasted"
                    Unfocused="ExpandableEditor_Unfocused" />
                <xlabs:ImageButton
                    Grid.Column="1"
                    Style="{StaticResource footerButtonStyle}"
                    Image="send.png"
                    VerticalOptions="End"
                    Command="{Binding PostCommand}" />
            </Grid>

            <xlabs:PopupLayout
                Grid.RowSpan="3"
                BackgroundColor="#80000000"
                IsVisible="{Binding HasProfile}">
                <xlabs:PopupLayout.GestureRecognizers>
                    <TapGestureRecognizer
                        Command="{Binding ClearProfileCommand}" />
                </xlabs:PopupLayout.GestureRecognizers>
                <xlabs:PopupLayout.Content>

                    <Grid
                        BindingContext="{Binding SelectedProfile}"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        BackgroundColor="White">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="16" />
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid
                            BackgroundColor="#2C3E50" />
                        <Grid
                            Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    Height="Auto" />
                                <RowDefinition
                                    Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ActivityIndicator
                                BindingContext="{x:Reference profileImage}"
                                Grid.RowSpan="3"
                                WidthRequest="120"
                                HeightRequest="120"
                                Margin="8"
                                IsVisible="{Binding IsLoading}"
                                IsRunning="{Binding IsLoading}" />
                            <Image
                                x:Name="profileImage"
                                Grid.RowSpan="3"
                                WidthRequest="120"
                                HeightRequest="120"
                                Margin="8"
                                Source="{Binding Avatar120px}" />
                            <Label
                                Grid.Column="1"
                                VerticalOptions="Center"
                                FontSize="Medium"
                                Text="{Binding DisplayName}"
                                Margin="8,4,32,4" />
                            <Label
                                Grid.Column="1"
                                Grid.Row="1"
                                VerticalOptions="Center"
                                FontSize="Small"
                                Text="{Binding ScreenName, StringFormat='(@{0})'}"
                                Margin="8,4,32,4" />
                        </Grid>
                        <Button
                            Grid.Row="2"
                            Margin="8,4"
                            HorizontalOptions="End"
                            IsVisible="{Binding IsOtherUser}"
                            Text="Send Direct Message"
                            Command="{Binding BeginDirectMessageCommand}" />
                    </Grid>
                </xlabs:PopupLayout.Content>
            </xlabs:PopupLayout>
        </Grid>
    </ContentPage.Content>
</ContentPage>